name: "parma_vps"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Установите нужную версию Python

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          
          pip install -r src/requirements.txt

#      - name: Add SSH host key
#        run: |
#            mkdir -p ~/.ssh
#            ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Setup SSH for deploy
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY_V1 }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H 45.9.73.213 >> ~/.ssh/known_hosts

      - name: Debug SSH
        run: |
          cat ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh root@45.9.73.213 "echo 123"
          
      
          

#
#      - name: Run command on remote server
#        uses: D3rHase/ssh-command-action@v0.2.2
#        with:
##          host: ${{secrets.SSH_HOST}}
#          host: 45.9.73.213
##          user: ${{secrets.SSH_USER}}
#          user: root
#          private_key: ${{secrets.SSH_PRIVATE_KEY}}
#          host_fingerprint: ${{ secrets.INPUT_HOST_FINGERPRINT }}
#          command: |
#            cd ${{ secrets.PROJECT_FOLDER }};
#            git checkout main;
#            git pull;
#            docker-compose down;
#            docker-compose up -d;
#            docker system prune --all --force;

